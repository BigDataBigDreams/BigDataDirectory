// Generated by CoffeeScript 1.6.3
(function() {
  var OR_USE_MODEL, OR_USE_STARS, SELECT_MODEL, addNewAppliance, betterLog, calcMain, findAjax, findBrand, phps, showBrands;

  SELECT_MODEL = "Search for model";

  OR_USE_STARS = "or use stars";

  OR_USE_MODEL = "or search model";

  phps = 'resources/main/load';

  findAjax = function(type, obj, call) {
    return $.post(phps + type + '.php', obj, function(res) {
      var jsonRes;
      console.log(res);
      jsonRes = eval(res);
      return call(jsonRes);
    });
  };

  betterLog = function(x, y) {
    return Math.log(y) / Math.log(x);
  };

  calcMain = function() {
    var j, rows, sum, _i, _ref;
    rows = $('tr');
    sum = 0;
    for (j = _i = 1, _ref = rows.length; 1 <= _ref ? _i < _ref : _i > _ref; j = 1 <= _ref ? ++_i : --_i) {
      sum += parseInt($(rows[j]).find('td').last().html(), 10);
    }
    return $('#tempValue').html(sum.toFixed(2) + '*C').css('width', betterLog(10, sum) + 2 + 'em');
  };

  window.getTable = function(row) {
    return $(row).find('select').val();
  };

  findBrand = function(row) {
    return findAjax('Brands', {
      'tableName': getTable(row),
      'brand': like
    }, function(brands) {
      return showBrands(row, brands);
    });
  };

  window.nearestStar = function(stars, row) {
    var tname;
    tname = getTable(row);
    return findAjax('ByStar', {
      'tableName': tname,
      'star': stars + 1
    }, function(res) {
      row.find('td').last().html(res[0].power);
      return calcMain();
    });
  };

  showBrands = function(row, brands) {};

  window.modelInput = function() {
    return $('<input>').addClass('model').attr({
      type: 'text',
      value: SELECT_MODEL
    }).focusin(function() {
      if (this.value === SELECT_MODEL) {
        return this.value = "";
      }
    }).focusout(function() {
      if (!this.value) {
        return this.value = SELECT_MODEL;
      }
    }).keyup(function() {
      return findBrands($(this).parents('tr'));
    });
  };

  window.getStarInput = function() {
    var j, stars, starspan, _fn, _i;
    starspan = $('<span>').addClass('stars');
    stars = [];
    _fn = function() {
      var lj;
      lj = j;
      return stars.push($('<span>').click(function() {
        var k, star, _j, _k, _len;
        for (_j = 0, _len = stars.length; _j < _len; _j++) {
          star = stars[_j];
          star.removeClass('active');
        }
        for (k = _k = 0; 0 <= lj ? _k <= lj : _k >= lj; k = 0 <= lj ? ++_k : --_k) {
          stars[k].addClass('active');
        }
        return nearestStar(lj, $($(this).parents('tr')));
      }));
    };
    for (j = _i = 0; _i < 6; j = ++_i) {
      _fn();
    }
    return starspan.append(stars);
  };

  window.getNewRow = function() {
    var newRow;
    newRow = $('<tr>').append($('<td>').html('<select id="applianceType">\
				<option value="">Select appliance</option>\
				<option value="airconditioner">Air conditioner</option>\
				<option value="clothesdryer">Clothes dryer</option>\
				<option value="computermonitors">Computor monitor</option>\
				<option value="dishwashers">Dishwasher</option>\
				<option value="fridgefreezer">Fridge/Freezer</option>\
				<option value="television">Television</option>\
			</select>')).append($('<td>').addClass('input').html(getStarInput())).append($('<td>').append($('<a>'))).append($('<td>').html(0));
    return newRow;
  };

  addNewAppliance = function() {
    return $('.appliance-table').append(getNewRow());
  };

  $(document).ready(function() {
    addNewAppliance();
    return $('#addAppliance').click(addNewAppliance);
  });

  window.resultsReady = (function() {
    var res;
    res = false;
    return function(val) {
      res = val;
      if (res) {
        $('.navbox li').addClass('navigable');
      } else {
        $('.navbox li').removeClass('navigable');
      }
      return res;
    };
  })();

  window.getModel = function() {
    var cols, model, row, _i, _len, _ref;
    model = [];
    _ref = $('.appliances-table');
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      row = _ref[_i];
      cols = rows.find('td');
      model.append({
        type: $(cols[0]).val(),
        co2: parseInt($(cols[3]).html())
      });
    }
    return model;
  };

}).call(this);
